{"ast":null,"code":"'use strict';var utils=require(\"./utils\");var has=Object.prototype.hasOwnProperty;var isArray=Array.isArray;var defaults={allowDots:false,allowPrototypes:false,arrayLimit:20,charset:'utf-8',charsetSentinel:false,comma:false,decoder:utils.decode,delimiter:'&',depth:5,ignoreQueryPrefix:false,interpretNumericEntities:false,parameterLimit:1000,parseArrays:true,plainObjects:false,strictNullHandling:false};var interpretNumericEntities=function interpretNumericEntities(str){return str.replace(/&#(\\d+);/g,function($0,numberStr){return String.fromCharCode(parseInt(numberStr,10));});};var isoSentinel='utf8=%26%2310003%3B';var charsetSentinel='utf8=%E2%9C%93';var parseValues=function parseQueryStringValues(str,options){var obj={};var cleanStr=options.ignoreQueryPrefix?str.replace(/^\\?/,''):str;var limit=options.parameterLimit===Infinity?undefined:options.parameterLimit;var parts=cleanStr.split(options.delimiter,limit);var skipIndex=-1;var i;var charset=options.charset;if(options.charsetSentinel){for(i=0;i<parts.length;++i){if(parts[i].indexOf('utf8=')===0){if(parts[i]===charsetSentinel){charset='utf-8';}else if(parts[i]===isoSentinel){charset='iso-8859-1';}skipIndex=i;i=parts.length;}}}for(i=0;i<parts.length;++i){if(i===skipIndex){continue;}var part=parts[i];var bracketEqualsPos=part.indexOf(']=');var pos=bracketEqualsPos===-1?part.indexOf('='):bracketEqualsPos+1;var key,val;if(pos===-1){key=options.decoder(part,defaults.decoder,charset,'key');val=options.strictNullHandling?null:'';}else{key=options.decoder(part.slice(0,pos),defaults.decoder,charset,'key');val=options.decoder(part.slice(pos+1),defaults.decoder,charset,'value');}if(val&&options.interpretNumericEntities&&charset==='iso-8859-1'){val=interpretNumericEntities(val);}if(val&&typeof val==='string'&&options.comma&&val.indexOf(',')>-1){val=val.split(',');}if(part.indexOf('[]=')>-1){val=isArray(val)?[val]:val;}if(has.call(obj,key)){obj[key]=utils.combine(obj[key],val);}else{obj[key]=val;}}return obj;};var parseObject=function parseObject(chain,val,options){var leaf=val;for(var i=chain.length-1;i>=0;--i){var obj;var root=chain[i];if(root==='[]'&&options.parseArrays){obj=[].concat(leaf);}else{obj=options.plainObjects?Object.create(null):{};var cleanRoot=root.charAt(0)==='['&&root.charAt(root.length-1)===']'?root.slice(1,-1):root;var index=parseInt(cleanRoot,10);if(!options.parseArrays&&cleanRoot===''){obj={0:leaf};}else if(!isNaN(index)&&root!==cleanRoot&&String(index)===cleanRoot&&index>=0&&options.parseArrays&&index<=options.arrayLimit){obj=[];obj[index]=leaf;}else{obj[cleanRoot]=leaf;}}leaf=obj;}return leaf;};var parseKeys=function parseQueryStringKeys(givenKey,val,options){if(!givenKey){return;}var key=options.allowDots?givenKey.replace(/\\.([^.[]+)/g,'[$1]'):givenKey;var brackets=/(\\[[^[\\]]*])/;var child=/(\\[[^[\\]]*])/g;var segment=options.depth>0&&brackets.exec(key);var parent=segment?key.slice(0,segment.index):key;var keys=[];if(parent){if(!options.plainObjects&&has.call(Object.prototype,parent)){if(!options.allowPrototypes){return;}}keys.push(parent);}var i=0;while(options.depth>0&&(segment=child.exec(key))!==null&&i<options.depth){i+=1;if(!options.plainObjects&&has.call(Object.prototype,segment[1].slice(1,-1))){if(!options.allowPrototypes){return;}}keys.push(segment[1]);}if(segment){keys.push('['+key.slice(segment.index)+']');}return parseObject(keys,val,options);};var normalizeParseOptions=function normalizeParseOptions(opts){if(!opts){return defaults;}if(opts.decoder!==null&&opts.decoder!==undefined&&typeof opts.decoder!=='function'){throw new TypeError('Decoder has to be a function.');}if(typeof opts.charset!=='undefined'&&opts.charset!=='utf-8'&&opts.charset!=='iso-8859-1'){throw new Error('The charset option must be either utf-8, iso-8859-1, or undefined');}var charset=typeof opts.charset==='undefined'?defaults.charset:opts.charset;return{allowDots:typeof opts.allowDots==='undefined'?defaults.allowDots:!!opts.allowDots,allowPrototypes:typeof opts.allowPrototypes==='boolean'?opts.allowPrototypes:defaults.allowPrototypes,arrayLimit:typeof opts.arrayLimit==='number'?opts.arrayLimit:defaults.arrayLimit,charset:charset,charsetSentinel:typeof opts.charsetSentinel==='boolean'?opts.charsetSentinel:defaults.charsetSentinel,comma:typeof opts.comma==='boolean'?opts.comma:defaults.comma,decoder:typeof opts.decoder==='function'?opts.decoder:defaults.decoder,delimiter:typeof opts.delimiter==='string'||utils.isRegExp(opts.delimiter)?opts.delimiter:defaults.delimiter,depth:typeof opts.depth==='number'||opts.depth===false?+opts.depth:defaults.depth,ignoreQueryPrefix:opts.ignoreQueryPrefix===true,interpretNumericEntities:typeof opts.interpretNumericEntities==='boolean'?opts.interpretNumericEntities:defaults.interpretNumericEntities,parameterLimit:typeof opts.parameterLimit==='number'?opts.parameterLimit:defaults.parameterLimit,parseArrays:opts.parseArrays!==false,plainObjects:typeof opts.plainObjects==='boolean'?opts.plainObjects:defaults.plainObjects,strictNullHandling:typeof opts.strictNullHandling==='boolean'?opts.strictNullHandling:defaults.strictNullHandling};};module.exports=function(str,opts){var options=normalizeParseOptions(opts);if(str===''||str===null||typeof str==='undefined'){return options.plainObjects?Object.create(null):{};}var tempObj=typeof str==='string'?parseValues(str,options):str;var obj=options.plainObjects?Object.create(null):{};var keys=Object.keys(tempObj);for(var i=0;i<keys.length;++i){var key=keys[i];var newObj=parseKeys(key,tempObj[key],options);obj=utils.merge(obj,newObj,options);}return utils.compact(obj);};","map":{"version":3,"sources":["/Users/thanutpond/Desktop/whereApp/node_modules/expo/node_modules/qs/lib/parse.js"],"names":["utils","require","has","Object","prototype","hasOwnProperty","isArray","Array","defaults","allowDots","allowPrototypes","arrayLimit","charset","charsetSentinel","comma","decoder","decode","delimiter","depth","ignoreQueryPrefix","interpretNumericEntities","parameterLimit","parseArrays","plainObjects","strictNullHandling","str","replace","$0","numberStr","String","fromCharCode","parseInt","isoSentinel","parseValues","parseQueryStringValues","options","obj","cleanStr","limit","Infinity","undefined","parts","split","skipIndex","i","length","indexOf","part","bracketEqualsPos","pos","key","val","slice","call","combine","parseObject","chain","leaf","root","concat","create","cleanRoot","charAt","index","isNaN","parseKeys","parseQueryStringKeys","givenKey","brackets","child","segment","exec","parent","keys","push","normalizeParseOptions","opts","TypeError","Error","isRegExp","module","exports","tempObj","newObj","merge","compact"],"mappings":"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","sourcesContent":["'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar defaults = {\n    allowDots: false,\n    allowPrototypes: false,\n    arrayLimit: 20,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    comma: false,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    ignoreQueryPrefix: false,\n    interpretNumericEntities: false,\n    parameterLimit: 1000,\n    parseArrays: true,\n    plainObjects: false,\n    strictNullHandling: false\n};\n\nvar interpretNumericEntities = function (str) {\n    return str.replace(/&#(\\d+);/g, function ($0, numberStr) {\n        return String.fromCharCode(parseInt(numberStr, 10));\n    });\n};\n\n// This is what browsers will submit when the ✓ character occurs in an\n// application/x-www-form-urlencoded body and the encoding of the page containing\n// the form is iso-8859-1, or when the submitted form has an accept-charset\n// attribute of iso-8859-1. Presumably also with other charsets that do not contain\n// the ✓ character, such as us-ascii.\nvar isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')\n\n// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.\nvar charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('✓')\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = {};\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\n    var parts = cleanStr.split(options.delimiter, limit);\n    var skipIndex = -1; // Keep track of where the utf8 sentinel was found\n    var i;\n\n    var charset = options.charset;\n    if (options.charsetSentinel) {\n        for (i = 0; i < parts.length; ++i) {\n            if (parts[i].indexOf('utf8=') === 0) {\n                if (parts[i] === charsetSentinel) {\n                    charset = 'utf-8';\n                } else if (parts[i] === isoSentinel) {\n                    charset = 'iso-8859-1';\n                }\n                skipIndex = i;\n                i = parts.length; // The eslint settings do not allow break;\n            }\n        }\n    }\n\n    for (i = 0; i < parts.length; ++i) {\n        if (i === skipIndex) {\n            continue;\n        }\n        var part = parts[i];\n\n        var bracketEqualsPos = part.indexOf(']=');\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\n\n        var key, val;\n        if (pos === -1) {\n            key = options.decoder(part, defaults.decoder, charset, 'key');\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos), defaults.decoder, charset, 'key');\n            val = options.decoder(part.slice(pos + 1), defaults.decoder, charset, 'value');\n        }\n\n        if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {\n            val = interpretNumericEntities(val);\n        }\n\n        if (val && typeof val === 'string' && options.comma && val.indexOf(',') > -1) {\n            val = val.split(',');\n        }\n\n        if (part.indexOf('[]=') > -1) {\n            val = isArray(val) ? [val] : val;\n        }\n\n        if (has.call(obj, key)) {\n            obj[key] = utils.combine(obj[key], val);\n        } else {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function (chain, val, options) {\n    var leaf = val;\n\n    for (var i = chain.length - 1; i >= 0; --i) {\n        var obj;\n        var root = chain[i];\n\n        if (root === '[]' && options.parseArrays) {\n            obj = [].concat(leaf);\n        } else {\n            obj = options.plainObjects ? Object.create(null) : {};\n            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n            var index = parseInt(cleanRoot, 10);\n            if (!options.parseArrays && cleanRoot === '') {\n                obj = { 0: leaf };\n            } else if (\n                !isNaN(index)\n                && root !== cleanRoot\n                && String(index) === cleanRoot\n                && index >= 0\n                && (options.parseArrays && index <= options.arrayLimit)\n            ) {\n                obj = [];\n                obj[index] = leaf;\n            } else {\n                obj[cleanRoot] = leaf;\n            }\n        }\n\n        leaf = obj;\n    }\n\n    return leaf;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = options.depth > 0 && brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while (options.depth > 0 && (segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, just add whatever is left\n\n    if (segment) {\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options);\n};\n\nvar normalizeParseOptions = function normalizeParseOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.decoder !== null && opts.decoder !== undefined && typeof opts.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new Error('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n    var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;\n\n    return {\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,\n        arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,\n        decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,\n        delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,\n        // eslint-disable-next-line no-implicit-coercion, no-extra-parens\n        depth: (typeof opts.depth === 'number' || opts.depth === false) ? +opts.depth : defaults.depth,\n        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,\n        interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,\n        parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,\n        parseArrays: opts.parseArrays !== false,\n        plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (str, opts) {\n    var options = normalizeParseOptions(opts);\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? Object.create(null) : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? Object.create(null) : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options);\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    return utils.compact(obj);\n};\n"]},"metadata":{},"sourceType":"script"}