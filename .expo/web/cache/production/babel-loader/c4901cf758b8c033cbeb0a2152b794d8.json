{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(source,true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import React,{Component}from'react';import PropTypes from'prop-types';import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Image from\"react-native-web/dist/exports/Image\";import Animated from\"react-native-web/dist/exports/Animated\";import decorateMapComponent,{SUPPORTED,USES_DEFAULT_IMPLEMENTATION}from\"./decorateMapComponent\";var viewConfig={uiViewClassName:'AIR<provider>MapOverlay',validAttributes:{image:true}};var propTypes=_objectSpread({},View.propTypes,{image:PropTypes.any.isRequired,bounds:PropTypes.arrayOf(PropTypes.array.isRequired).isRequired,tappable:PropTypes.bool,onPress:PropTypes.func});var MapOverlay=function(_Component){_inherits(MapOverlay,_Component);function MapOverlay(){_classCallCheck(this,MapOverlay);return _possibleConstructorReturn(this,_getPrototypeOf(MapOverlay).apply(this,arguments));}_createClass(MapOverlay,[{key:\"render\",value:function render(){var image;if(this.props.image){if(typeof this.props.image.startsWith==='function'&&this.props.image.startsWith('http')){image=this.props.image;}else{image=Image.resolveAssetSource(this.props.image)||{};image=image.uri;}}var AIRMapOverlay=this.getAirComponent();return React.createElement(AIRMapOverlay,_extends({},this.props,{image:image,style:[styles.overlay,this.props.style]}));}}]);return MapOverlay;}(Component);MapOverlay.propTypes=propTypes;MapOverlay.viewConfig=viewConfig;var styles=StyleSheet.create({overlay:{position:'absolute',backgroundColor:'transparent'}});MapOverlay.Animated=Animated.createAnimatedComponent(MapOverlay);export default decorateMapComponent(MapOverlay,{componentType:'Overlay',providers:{google:{ios:SUPPORTED,android:USES_DEFAULT_IMPLEMENTATION}}});","map":{"version":3,"sources":["/Users/thanutpond/Desktop/whereApp/node_modules/react-native-maps/lib/components/MapOverlay.js"],"names":["React","Component","PropTypes","decorateMapComponent","SUPPORTED","USES_DEFAULT_IMPLEMENTATION","viewConfig","uiViewClassName","validAttributes","image","propTypes","View","any","isRequired","bounds","arrayOf","array","tappable","bool","onPress","func","MapOverlay","props","startsWith","Image","resolveAssetSource","uri","AIRMapOverlay","getAirComponent","styles","overlay","style","StyleSheet","create","position","backgroundColor","Animated","createAnimatedComponent","componentType","providers","google","ios","android"],"mappings":"utCAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,SAAP,KAAsB,YAAtB,C,0OAGA,MAAOC,CAAAA,oBAAP,EACEC,SADF,CAEEC,2BAFF,8BAKA,GAAMC,CAAAA,UAAU,CAAG,CACjBC,eAAe,CAAE,yBADA,CAEjBC,eAAe,CAAE,CACfC,KAAK,CAAE,IADQ,CAFA,CAAnB,CAOA,GAAMC,CAAAA,SAAS,kBACVC,IAAI,CAACD,SADK,EAGbD,KAAK,CAAEP,SAAS,CAACU,GAAV,CAAcC,UAHR,CAKbC,MAAM,CAAEZ,SAAS,CAACa,OAAV,CAAkBb,SAAS,CAACc,KAAV,CAAgBH,UAAlC,EAA8CA,UALzC,CASbI,QAAQ,CAAEf,SAAS,CAACgB,IATP,CAWbC,OAAO,CAAEjB,SAAS,CAACkB,IAXN,EAAf,C,GAcMC,CAAAA,U,uQACK,CACP,GAAIZ,CAAAA,KAAJ,CACA,GAAI,KAAKa,KAAL,CAAWb,KAAf,CAAsB,CACpB,GACE,MAAO,MAAKa,KAAL,CAAWb,KAAX,CAAiBc,UAAxB,GAAuC,UAAvC,EACA,KAAKD,KAAL,CAAWb,KAAX,CAAiBc,UAAjB,CAA4B,MAA5B,CAFF,CAGE,CACAd,KAAK,CAAG,KAAKa,KAAL,CAAWb,KAAnB,CACD,CALD,IAKO,CACLA,KAAK,CAAGe,KAAK,CAACC,kBAAN,CAAyB,KAAKH,KAAL,CAAWb,KAApC,GAA8C,EAAtD,CACAA,KAAK,CAAGA,KAAK,CAACiB,GAAd,CACD,CACF,CAED,GAAMC,CAAAA,aAAa,CAAG,KAAKC,eAAL,EAAtB,CAEA,MACE,qBAAC,aAAD,aACM,KAAKN,KADX,EAEE,KAAK,CAAEb,KAFT,CAGE,KAAK,CAAE,CAACoB,MAAM,CAACC,OAAR,CAAiB,KAAKR,KAAL,CAAWS,KAA5B,CAHT,GADF,CAOD,C,wBAxBsB9B,S,EA2BzBoB,UAAU,CAACX,SAAX,CAAuBA,SAAvB,CACAW,UAAU,CAACf,UAAX,CAAwBA,UAAxB,CAEA,GAAMuB,CAAAA,MAAM,CAAGG,UAAU,CAACC,MAAX,CAAkB,CAC/BH,OAAO,CAAE,CACPI,QAAQ,CAAE,UADH,CAEPC,eAAe,CAAE,aAFV,CADsB,CAAlB,CAAf,CAOAd,UAAU,CAACe,QAAX,CAAsBA,QAAQ,CAACC,uBAAT,CAAiChB,UAAjC,CAAtB,CAEA,cAAelB,CAAAA,oBAAoB,CAACkB,UAAD,CAAa,CAC9CiB,aAAa,CAAE,SAD+B,CAE9CC,SAAS,CAAE,CACTC,MAAM,CAAE,CACNC,GAAG,CAAErC,SADC,CAENsC,OAAO,CAAErC,2BAFH,CADC,CAFmC,CAAb,CAAnC","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { View, StyleSheet, Image, Animated } from 'react-native';\n\nimport decorateMapComponent, {\n  SUPPORTED,\n  USES_DEFAULT_IMPLEMENTATION,\n} from './decorateMapComponent';\n\nconst viewConfig = {\n  uiViewClassName: 'AIR<provider>MapOverlay',\n  validAttributes: {\n    image: true,\n  },\n};\n\nconst propTypes = {\n  ...View.propTypes,\n  // A custom image to be used as overlay.\n  image: PropTypes.any.isRequired,\n  // Top left and bottom right coordinates for the overlay\n  bounds: PropTypes.arrayOf(PropTypes.array.isRequired).isRequired,\n  /* Boolean to allow an overlay to be tappable and use the\n   * onPress function\n   */\n  tappable: PropTypes.bool,\n  // Callback that is called when the user presses on the overlay\n  onPress: PropTypes.func,\n};\n\nclass MapOverlay extends Component {\n  render() {\n    let image;\n    if (this.props.image) {\n      if (\n        typeof this.props.image.startsWith === 'function' &&\n        this.props.image.startsWith('http')\n      ) {\n        image = this.props.image;\n      } else {\n        image = Image.resolveAssetSource(this.props.image) || {};\n        image = image.uri;\n      }\n    }\n\n    const AIRMapOverlay = this.getAirComponent();\n\n    return (\n      <AIRMapOverlay\n        {...this.props}\n        image={image}\n        style={[styles.overlay, this.props.style]}\n      />\n    );\n  }\n}\n\nMapOverlay.propTypes = propTypes;\nMapOverlay.viewConfig = viewConfig;\n\nconst styles = StyleSheet.create({\n  overlay: {\n    position: 'absolute',\n    backgroundColor: 'transparent',\n  },\n});\n\nMapOverlay.Animated = Animated.createAnimatedComponent(MapOverlay);\n\nexport default decorateMapComponent(MapOverlay, {\n  componentType: 'Overlay',\n  providers: {\n    google: {\n      ios: SUPPORTED,\n      android: USES_DEFAULT_IMPLEMENTATION,\n    },\n  },\n});\n"]},"metadata":{},"sourceType":"module"}