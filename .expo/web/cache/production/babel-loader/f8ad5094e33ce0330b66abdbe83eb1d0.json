{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";import React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import Image from\"react-native-web/dist/exports/Image\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import Alert from\"react-native-web/dist/exports/Alert\";import StatusBar from\"react-native-web/dist/exports/StatusBar\";import AsyncStorage from\"react-native-web/dist/exports/AsyncStorage\";var LinksScreen=function(_React$Component){_inherits(LinksScreen,_React$Component);function LinksScreen(){var _getPrototypeOf2;var _this;_classCallCheck(this,LinksScreen);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(LinksScreen)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.gotoProfile=function(){var navigation=_this.props.navigation;navigation.navigate('ShowMap');};_this.componentDidMount=function _callee(){var value;return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return _regeneratorRuntime.awrap(AsyncStorage.getItem('@User'));case 3:value=_context.sent;if(value!==null){console.log(JSON.parse(value));}_context.next=10;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);console.log(_context.t0);case 10:case\"end\":return _context.stop();}}},null,null,[[0,7]]);};return _this;}_createClass(LinksScreen,[{key:\"render\",value:function render(){var _this2=this;var navigate=this.props.navigation.navigate;return React.createElement(View,{style:styles.container},React.createElement(StatusBar,{barStyle:\"dark-content\"}),React.createElement(View,{style:styles.menuFlex},React.createElement(TouchableOpacity,{onPress:function onPress(){return _this2.gotoProfile();}},React.createElement(Image,{style:styles.LogoStyle,source:require(\"../assets/icon/menu1.png\")})),React.createElement(View,{style:styles.space}),React.createElement(TouchableOpacity,{onPress:function onPress(){return Alert.alert('coming soon...');}},React.createElement(Image,{style:styles.LogoStyle,source:require(\"../assets/icon/menu2.png\")}))),React.createElement(View,{style:styles.menuFlex},React.createElement(TouchableOpacity,{onPress:function onPress(){return Alert.alert('coming soon...');}},React.createElement(Image,{style:styles.LogoStyle,source:require(\"../assets/icon/menu3.png\")})),React.createElement(TouchableOpacity,{onPress:function onPress(){return Alert.alert('coming soon...');}},React.createElement(Image,{style:styles.LogoStyle,source:require(\"../assets/icon/menu4.png\")}))));}}]);return LinksScreen;}(React.Component);LinksScreen.navigationOptions={headerLeft:null,title:'Menu',gesturesEnabled:false};export{LinksScreen as default};var styles=StyleSheet.create({container:{flex:2,justifyContent:'center',alignItems:\"center\"},menuFlex:{flexDirection:\"row\"},LogoStyle:{width:130,height:130,marginBottom:50,resizeMode:'contain'},space:{width:30}});","map":{"version":3,"sources":["/Users/thanutpond/Desktop/whereApp/screens/LinksScreen.js"],"names":["React","LinksScreen","gotoProfile","navigation","props","navigate","componentDidMount","AsyncStorage","getItem","value","console","log","JSON","parse","styles","container","menuFlex","LogoStyle","require","space","Alert","alert","Component","navigationOptions","headerLeft","title","gesturesEnabled","StyleSheet","create","flex","justifyContent","alignItems","flexDirection","width","height","marginBottom","resizeMode"],"mappings":"+YAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,C,wbAWqBC,CAAAA,W,kZAQnBC,W,CAAc,UAAM,IACVC,CAAAA,UADU,CACK,MAAKC,KADV,CACVD,UADU,CAElBA,UAAU,CAACE,QAAX,CAAoB,SAApB,EACD,C,OAEDC,iB,CAAoB,+MAEIC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAFJ,SAEVC,KAFU,eAGhB,GAAIA,KAAK,GAAK,IAAd,CAAoB,CAClBC,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,KAAL,CAAWJ,KAAX,CAAZ,EACD,CALe,+EAOhBC,OAAO,CAACC,GAAR,cAPgB,iE,8EAYX,oBACCN,CAAAA,QADD,CACc,KAAKD,KAAL,CAAWD,UADzB,CACCE,QADD,CAGP,MACE,qBAAC,IAAD,EAAM,KAAK,CAAES,MAAM,CAACC,SAApB,EACE,oBAAC,SAAD,EAAW,QAAQ,CAAC,cAApB,EADF,CAEE,oBAAC,IAAD,EAAM,KAAK,CAAED,MAAM,CAACE,QAApB,EACE,oBAAC,gBAAD,EAAkB,OAAO,CAAE,yBAAM,CAAA,MAAI,CAACd,WAAL,EAAN,EAA3B,EACE,oBAAC,KAAD,EACE,KAAK,CAAEY,MAAM,CAACG,SADhB,CAEE,MAAM,CAAEC,OAAO,4BAFjB,EADF,CADF,CAOE,oBAAC,IAAD,EAAM,KAAK,CAAEJ,MAAM,CAACK,KAApB,EAPF,CAQE,oBAAC,gBAAD,EAAkB,OAAO,CAAE,yBAAOC,CAAAA,KAAK,CAACC,KAAN,CAAY,gBAAZ,CAAP,EAA3B,EACE,oBAAC,KAAD,EACE,KAAK,CAAEP,MAAM,CAACG,SADhB,CAEE,MAAM,CAAEC,OAAO,4BAFjB,EADF,CARF,CAFF,CAiBE,oBAAC,IAAD,EAAM,KAAK,CAAEJ,MAAM,CAACE,QAApB,EACE,oBAAC,gBAAD,EAAkB,OAAO,CAAE,yBAAMI,CAAAA,KAAK,CAACC,KAAN,CAAY,gBAAZ,CAAN,EAA3B,EACE,oBAAC,KAAD,EACE,KAAK,CAAEP,MAAM,CAACG,SADhB,CAEE,MAAM,CAAEC,OAAO,4BAFjB,EADF,CADF,CAOE,oBAAC,gBAAD,EAAkB,OAAO,CAAE,yBAAME,CAAAA,KAAK,CAACC,KAAN,CAAY,gBAAZ,CAAN,EAA3B,EACE,oBAAC,KAAD,EACE,KAAK,CAAEP,MAAM,CAACG,SADhB,CAEE,MAAM,CAAEC,OAAO,4BAFjB,EADF,CAPF,CAjBF,CADF,CAkCD,C,yBA9DsClB,KAAK,CAACsB,S,EAA1BrB,W,CAEZsB,iB,CAAoB,CACzBC,UAAU,CAAE,IADa,CAEzBC,KAAK,CAAE,MAFkB,CAGzBC,eAAe,CAAE,KAHQ,C,QAFRzB,W,aAkErB,GAAMa,CAAAA,MAAM,CAAGa,UAAU,CAACC,MAAX,CAAkB,CAC/Bb,SAAS,CAAE,CACTc,IAAI,CAAE,CADG,CAETC,cAAc,CAAE,QAFP,CAGTC,UAAU,CAAE,QAHH,CADoB,CAM/Bf,QAAQ,CAAE,CACRgB,aAAa,CAAE,KADP,CANqB,CAS/Bf,SAAS,CAAE,CACTgB,KAAK,CAAE,GADE,CAETC,MAAM,CAAE,GAFC,CAGTC,YAAY,CAAE,EAHL,CAITC,UAAU,CAAE,SAJH,CAToB,CAe/BjB,KAAK,CAAE,CACLc,KAAK,CAAE,EADF,CAfwB,CAAlB,CAAf","sourcesContent":["import React from 'react';\nimport {\n  StyleSheet,\n  View,\n  Image,\n  TouchableOpacity,\n  Alert,\n  StatusBar\n} from 'react-native';\nimport {AsyncStorage} from 'react-native';\n\nexport default class LinksScreen extends React.Component {\n\n  static navigationOptions = {\n    headerLeft: null,\n    title: 'Menu',\n    gesturesEnabled: false,\n  };\n\n  gotoProfile = () => {\n    const { navigation } = this.props\n    navigation.navigate('ShowMap')\n  }\n\n  componentDidMount = async() => {\n    try {\n      const value = await AsyncStorage.getItem('@User');\n      if (value !== null) {\n        console.log(JSON.parse(value));\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n\n  render() {\n    const { navigate } = this.props.navigation;\n\n    return (\n      <View style={styles.container}>\n        <StatusBar barStyle=\"dark-content\" />\n        <View style={styles.menuFlex}>\n          <TouchableOpacity onPress={() => this.gotoProfile()}>\n            <Image\n              style={styles.LogoStyle}\n              source={require('../assets/icon/menu1.png')}\n            />\n          </TouchableOpacity>\n          <View style={styles.space} />\n          <TouchableOpacity onPress={() =>  Alert.alert('coming soon...')}>\n            <Image\n              style={styles.LogoStyle}\n              source={require('../assets/icon/menu2.png')}\n            />\n          </TouchableOpacity>\n        </View>\n        <View style={styles.menuFlex}>\n          <TouchableOpacity onPress={() => Alert.alert('coming soon...')}>\n            <Image\n              style={styles.LogoStyle}\n              source={require('../assets/icon/menu3.png')}\n            />\n          </TouchableOpacity>\n          <TouchableOpacity onPress={() => Alert.alert('coming soon...')}>\n            <Image\n              style={styles.LogoStyle}\n              source={require('../assets/icon/menu4.png')}\n            />\n          </TouchableOpacity>\n        </View>\n      </View>\n    );\n  }\n}\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 2,\n    justifyContent: 'center',\n    alignItems: \"center\",\n  },\n  menuFlex: {\n    flexDirection: \"row\",\n  },\n  LogoStyle: {\n    width: 130,\n    height: 130,\n    marginBottom: 50,\n    resizeMode: 'contain',\n  },\n  space: {\n    width: 30\n  }\n});\n\n"]},"metadata":{},"sourceType":"module"}